buildscript {
    repositories {
        maven {
            name 'Mixins'
            url 'https://repo.spongepowered.org/maven/'
        }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

version = "$project.minecraftVersion-$project.modSpecVer.$project.modImplVer"
group = project.userGroup
archivesBaseName = project.modId

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTOPENJDK
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

sourceSets {
    api
    generated
    main{
        java {
            srcDirs += sourceSets.api.java.srcDirs
        }
        resources {
            srcDirs += sourceSets.api.resources.srcDirs
            srcDirs += sourceSets.generated.resources.srcDirs
            exclude '.cache/'
        }
    }
}

def version_properties = [
        "loader_version"    : loaderVersion,
        "license"           : license,
        "issue_tracker_url" : issueTrackerURL,
        "mod_id"            : modId,
        "version"           : modSpecVer,
        "mod_name"          : modName,
        "display_url"       : displayURL,
        "forge_version"     : forgeVersion,
        "mixin_version"     : mixinVersion
]

processResources {
    outputs.upToDateWhen { false }
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    from(sourceSets.main.resources) {
        include "META-INF/mods.toml"
        include "epos.mixins.json"
        expand version_properties
    }
    into "$buildDir/resources/main/"
}

minecraft {
    mappings channel: project.mappingsType, version: project.mappingsVersion
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'epos'
            mods {
                epos {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'epos'
            mods {
                epos {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'epos'
            mods {
                epos {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'epos', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                epos {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    apiImplementation.extendsFrom(Implementation)
}

repositories {
    maven {
        name 'Mixins'
        url 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$project.minecraftVersion-$project.forgeVersion"
    implementation sourceSets.api.output
    //annotationProcessor 'org.spongepowered:mixin:0.8.5-SNAPSHOT:processor'
    //"org.spongepowered.mixin:$project.mixinVersion"
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    finalizedBy 'reobfJar'
    manifest {
        attributes([
                "Specification-Title"     : project.modName,
                "Specification-Vendor"    : project.userName,
                "Specification-Version"   : project.modSpecVer,
                "Implementation-Title"    : project.modName,
                'Implementation-Version': project.version,
                'Implementation-Vendor': project.userName,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConfigs': "${project.modId}.mixins.json"
        ])
    }
}

// Setup mixin reference map
mixin {
    add sourceSets.main, "${project.modId}.refmap.json"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
